{"pageProps":{"postData":{"id":"programmers_12936","contentHtml":"<h1>programmers_12936.py</h1>\n<h2>problem</h2>\n<p>줄 서는 방법[https://school.programmers.co.kr/learn/courses/30/lessons/12936]</p>\n<h2>answer</h2>\n<div><pre><code>def solution(n, k):\r\n    # 팩토리얼 계산용\r\n    facto = [1 for i in range(n+1)]\r\n    for i in range(1, n+1):\r\n        facto[i] = facto[i-1] * i\r\n\r\n    # 사용한 숫자 체크용\r\n    check = [1 for i in range(n+1)]\r\n    answer = []\r\n\r\n    # 한 자리씩 지나가면서 결정\r\n    # i가 해당하는 자리\r\n    # cnt가 남은 수중 몇번째로 작은 수가 들어갈지\r\n    for i in range(n):\r\n        cnt = 0\r\n        # 들어갈 수 있는 cnt가 얼마인지 알아냄\r\n        while 1:\r\n            if cnt * facto[n-i-1] &#x26;lt; k &#x26;lt;= (cnt + 1) * facto[n-i-1]:\r\n                k -= cnt * facto[n-i-1]\r\n                cnt += 1\r\n                break\r\n            else:\r\n                cnt += 1\r\n\r\n        # cnt에 해당하는 작은 순번의 수가 무엇인지 찾아냄\r\n        for i in range(1, len(check)):\r\n            if check[i] == 1:\r\n                cnt -= 1\r\n                if cnt == 0:\r\n                    answer.append(i)\r\n                    check[i] = 0\r\n                    break\r\n    return answer</code></pre></div>\n<h2>explanation</h2>\n<p>가장 기본적인 접근은 순열을 만들면서 k에 해당하는 순번쯤에서 멈추는 것이다.\r\n파이썬 같은 경우 순열조차 쉽게 생성할 수 있으므로 한번쯤 시도해볼 만한 방법이다.</p>\n<div><pre><code>from itertools import permutations</code></pre></div>\n<p>다만 당연하게도 실패한다. 순열을 구현해봤다면 순열을 도중에 그만두지 않는다고 할 시 n!만큼의 시간이 걸리기 때문에 문제에서 요구하는 시간 안에는 도저히 해낼 수가 없다.</p>\n<p>그렇다면 순열을 만들지 않고 순번만 구하면 된다는 접근을 시도해야한다.</p>\n<p>문제의 조건에서 볼 수 있듯이 이 문제에서는 순열을 생성하는데에 순서가 있고,\r\n이를 따라간다는 조건하에 언제쯤 어떤 순열이 나올지를 알 수가 있다.</p>\n<p>[1,2,3], [1,3,2], [2,1,3], [2,3,1], [3,1,2], [3,2,1]</p>\n<p>앞에서부터 한 자리씩 천천히 보면 뒤에 남은 가짓수가 다 떨어지기 전까지는 앞자리가 변하지 않는 것을 볼 수 있다.</p>\n<p>즉 첫 번째 자리는 남은 뒤의 자리 2,3번 자리의 경우의 수(2!)가 지나가기 전까지는 바뀌지 않는다.\r\n이를 통해서 주어진 k에 해당할 순열을 좁혀나갈 수 있다.</p>\n<p>예시와 함께 살펴보자면, 첫 번째 자리는 2!의 순번동안 유지가 된다.\r\n고로 남은 k에서 2!씩 빼가면서 더 이상 뺄 수 없을 시점에 숫자가 첫 번째 자리를 차지하게된다.\r\n(이 때 2!를 뺐을 때 0이 되는 경우는 현재의 숫자의 순번이 아닌 다음 숫자의 순번이므로 이 점을 주의해야한다)</p>\n<p>이 첫 번째 자리에서 해준 방식으로 2번째, 3번째 ... 자리를 확정해주면 된다.\r\n다만 달라지는 점은 이전 자리에서 쓴 숫자는 쓸 수 없기 때문에, 남은 숫자중에서 작은 숫자를 정해주면 된다.(순열 생성 순번이 남은 작은수에서 큰수순으로 진행되기 때문에)</p>\n<p>사실 이 문제는 고등학교를 다녔다면 지겹도록 봤을 군수열문제인데, 코드로 생각해보면 어떻게 풀어야할지 한번 고민하게 되는 문제다.</p>\n","title":"programmers_12936.py","date":"2022-09-19","tags":["algorithm","python","programmers"]}},"__N_SSG":true}